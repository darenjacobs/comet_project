name: 'Infra with terraform'

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infra/**'

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.7.6

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./infra
      
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./infra
      
      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ./infra
      
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color -input=false
          terraform plan -no-color -input=false -out=tfplan
        working-directory: ./infra

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
        run: terraform apply -auto-approve -input=false tfplan
        working-directory: ./infra

      - name: Output Terraform values
        if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
        run: |
          terraform output -json > tf_output.json
          echo "ECR_REPOSITORY=$(jq -r '.ecr_repository_url.value' tf_output.json)" >> $GITHUB_ENV
          echo "CLUSTER_NAME=$(jq -r '.cluster_name.value' tf_output.json)" >> $GITHUB_ENV
        working-directory: ./infra
